openapi: 3.0.3
info:
  title: Raw Rust ToDo List API
  description: API for managing users and their tasks in a ToDo list application.
  version: "1.0.0"
servers:
  - url: http://0.0.0.0:3000
    description: Development server
paths:
  /users:
    post:
      summary: Create a user
      description: Registers a new user with a username and password.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        "200":
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: User created
        "400":
          description: Error due to empty or missing username/password
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Missing username or password
        "409":
          description: Username already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: User already exists

  /tasks:
    post:
      summary: Create a task
      description: Creates a new task for the authenticated user.
      security:
        - basicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - content
              properties:
                content:
                  type: string
      responses:
        "200":
          description: Task created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Task created
        "400":
          description: Error due to empty content
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Empty body
        "401":
          description: Unauthorized due to invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Unauthorized

    get:
      summary: Retrieve all tasks
      description: Retrieves a list of all tasks created by the authenticated user.
      security:
        - basicAuth: []
      responses:
        "200":
          description: A list of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Task"

  /tasks/{taskId}:
    put:
      summary: Update a task
      description: Updates the content and/or completion status of an existing task for the authenticated user.
      security:
        - basicAuth: []
      parameters:
        - in: path
          name: taskId
          required: true
          schema:
            type: integer
            minimum: 1
          description: Unique identifier of the task
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                completed:
                  type: boolean
      responses:
        "200":
          description: Task updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Task updated
        "401":
          description: Unauthorized due to invalid credentials or not the owner
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Unauthorized
        "404":
          description: Task not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Not Found

    delete:
      summary: Delete a task
      description: Deletes an existing task for the authenticated user.
      security:
        - basicAuth: []
      parameters:
        - in: path
          name: taskId
          required: true
          schema:
            type: integer
            minimum: 1
          description: Unique identifier of the task
      responses:
        "200":
          description: Task deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Task deleted
        "401":
          description: Unauthorized due to invalid credentials or not the owner
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Unauthorized
        "404":
          description: Task not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Not Found

components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic

  schemas:
    Task:
      type: object
      properties:
        id:
          type: integer
        content:
          type: string
        completed:
          type: boolean
        owner:
          type: object
          properties:
            username:
              type: string
